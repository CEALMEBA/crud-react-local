[{"C:\\Users\\CEALMEBA\\Documents\\REACT\\REACT-CRUD-LOCAL\\src\\index.js":"1","C:\\Users\\CEALMEBA\\Documents\\REACT\\REACT-CRUD-LOCAL\\src\\App.js":"2","C:\\Users\\CEALMEBA\\Documents\\REACT\\REACT-CRUD-LOCAL\\src\\reportWebVitals.js":"3"},{"size":517,"mtime":1626982984890,"results":"4","hashOfConfig":"5"},{"size":5384,"mtime":1629814997273,"results":"6","hashOfConfig":"5"},{"size":375,"mtime":1626982984892,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1xojppm",{"filePath":"11","messages":"12","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\CEALMEBA\\Documents\\REACT\\REACT-CRUD-LOCAL\\src\\index.js",[],["16","17"],"C:\\Users\\CEALMEBA\\Documents\\REACT\\REACT-CRUD-LOCAL\\src\\App.js",["18","19","20","21","22"],"//Creador: Cesar Alfonso Mendoza Barradas\r\n//crud local con array list y insercion en memoria ,no contiene base de datos\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport {Table,Button,Container,Modal,ModalBody, ModalHeader,FormGroup,ModalFooter} from 'reactstrap';\r\n\r\nconst data =[\r\n  {id: 1, Nombre: \"hola\", Numero: \"5963214896\"},\r\n  {id: 2, Nombre: \"hola2\", Numero: \"5267698756\"},\r\n  {id: 3, Nombre: \"hola3\", Numero: \"1234567893\"},\r\n  {id: 4, Nombre: \"hola4\", Numero: \"1234567896\"},\r\n  {id: 5, Nombre: \"hola5\", Numero: \"9874563210\"},\r\n  {id: 6, Nombre: \"hola6\", Numero: \"0369875412\"},\r\n];\r\nclass App extends React.Component {\r\n  state={\r\n    data: data,\r\n    form:{\r\n      id:'',\r\n      nombre:'',\r\n      numero:''\r\n    },\r\n   modalInsertar: false,\r\n  }\r\n  handlechange=e=>{\r\n   this.setState({\r\n     form:{\r\n       ...this.state.form,\r\n       [e.target.name]: e.target.value,\r\n     },\r\n   });\r\n  };\r\n   mostrarModalInsertar=()=>{\r\n    this.setState({modalInsertar: true});\r\n   }\r\n   ocultarModalInsertar=()=>{\r\n    this.setState({modalInsertar: false});\r\n   }\r\n\r\n   mostrarModalEditar=(registro)=>{\r\n    this.setState({modalEditar: true ,form: registro});\r\n   }\r\n   ocultarModalEditar=()=>{\r\n    this.setState({modalEditar: false});\r\n   }\r\n  \r\n  insertar=()=>{\r\n    var valorNuevo={...this.state.form};\r\n    valorNuevo.id=this.state.data.length+1;\r\n    var lista=this.state.data;\r\n    lista.push(valorNuevo);\r\n    this.setState({data: lista, modalInsertar:false});\r\n  }\r\n \r\n editar=(dato)=>{\r\n   var contador=0;\r\n   var lista=this.state.data;\r\n   lista.map((registro)=>{\r\n     if(dato.id==registro.id){\r\n       lista[contador].Nombre=dato.Nombre;\r\n       lista[contador].Numero=dato.Numero;\r\n     }\r\n     contador++;\r\n   });\r\n   this.setState({data: lista, modalEditar: false});\r\n }\r\n\r\n eliminar=(dato)=>{\r\n   var opcion= window.confirm(\"Esta seguro de eliminar el registro\"+dato.id);\r\n   if(opcion){\r\n     var contador=0;\r\n     var lista = this.state.data;\r\n     lista.map((registro)=>{\r\n       if(registro.id==dato.id){\r\n         lista.splice(contador, 1);\r\n       }\r\n       contador++;\r\n     });\r\n     this.setState({data: lista});\r\n   }\r\n }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Container>\r\n      <br/>\r\n        <Button color=\"success\" onClick={()=>this.mostrarModalInsertar()} >Insertar Nuevo </Button>\r\n         <br/> <br/>\r\n         <Table>\r\n           <thead><tr><th>Id</th>\r\n           <th>Nombre</th>\r\n           <th>Telefono</th>\r\n           <th>opciones</th> </tr></thead>\r\n           <tbody>\r\n             {this.state,data.map((elemento)=>(\r\n              <tr>\r\n                 <td>{elemento.id}</td>\r\n                 <td>{elemento.Nombre}</td>\r\n                 <td>{elemento.Numero}</td>\r\n                 <td><Button color =\"primary\" onClick={()=>this.mostrarModalEditar(elemento)} >Editar</Button></td>\r\n                 {\"  \"}\r\n                 <td><Button color =\"danger\" onClick={()=>this.eliminar(elemento)}>Eliminar</Button></td>\r\n              </tr>\r\n             ))}\r\n           </tbody>\r\n         </Table>\r\n        </Container>\r\n        <Modal isOpen={this.state.modalInsertar}>\r\n          <ModalHeader>\r\n            <div>\r\n              <h3>Insertar Registro</h3>\r\n            </div>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <label>Id:</label>\r\n              <input className=\"form-control\" readOnly type=\"text\"  value={this.state.data.length+1}/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <label>Nombre</label>\r\n              <input className='form-control' name=\"Nombre\" type=\"text\" onChange={this.handlechange}/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <label>Numero</label>\r\n              <input className='form-control' name=\"Numero\" type=\"text\" onChange={this.handlechange}/>\r\n            </FormGroup>\r\n\r\n          </ModalBody>\r\n          <ModalFooter>\r\n          <td><Button color =\"primary\" onClick={()=>this.insertar()} >agregar</Button></td>\r\n          <td><Button color =\"danger\" onClick={()=>this.ocultarModalInsertar()}>cancelar</Button></td>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        <Modal isOpen={this.state.modalEditar}>\r\n          <ModalHeader>\r\n            <div>\r\n              <h3>Editar Registro</h3>\r\n            </div>\r\n          </ModalHeader>\r\n\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <label>Id:</label>\r\n              <input className=\"form-control\" readOnly type=\"text\" value={this.state.form.id}/>\r\n            </FormGroup> \r\n\r\n            <FormGroup>\r\n              <label>Nombre</label>\r\n              <input className='form-control' name=\"Nombre\" type=\"text\" onChange={this.handlechange} value={this.state.form.Nombre}/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <label>Numero</label>\r\n              <input className='form-control' name=\"Numero\" type=\"text\" onChange={this.handlechange} value={this.state.form.Numero}/>\r\n            </FormGroup>\r\n\r\n          </ModalBody>\r\n          <ModalFooter>\r\n          <td><Button color =\"primary\" onClick={()=>this.editar(this.state.form)} >editar</Button></td>\r\n          <td><Button color =\"danger\" onClick={()=>this.ocultarModalEditar()}>cancelar</Button></td>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </>)\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\CEALMEBA\\Documents\\REACT\\REACT-CRUD-LOCAL\\src\\reportWebVitals.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":59,"column":24,"nodeType":"29","messageId":"30","endLine":59,"endColumn":26},{"ruleId":"31","severity":1,"message":"32","line":60,"column":16,"nodeType":"33","messageId":"34","endLine":60,"endColumn":18},{"ruleId":"27","severity":1,"message":"28","line":74,"column":26,"nodeType":"29","messageId":"30","endLine":74,"endColumn":28},{"ruleId":"31","severity":1,"message":"32","line":75,"column":22,"nodeType":"33","messageId":"34","endLine":75,"endColumn":24},{"ruleId":"35","severity":1,"message":"36","line":97,"column":25,"nodeType":"37","messageId":"38","endLine":97,"endColumn":26},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]